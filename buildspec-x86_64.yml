version: 0.2
env:
  variables:
    CODEBUILD_OS_NAME: "linux"

phases:
  install:
    run-as: root
    runtime-versions:
      java: corretto8
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    run-as: root
    commands:
      - echo "################################################################################"
      - echo "Installing Dependencies for Linux/x86_64"
      - echo "################################################################################"
      - sudo apt update
      - sudo apt install -y ca-certificates
      - echo "Install aws cli v2"
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - unzip awscliv2.zip
      - sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
      - export PATH=~/bin:$PATH
      - echo "Aws cli has been installed successfully"
      - echo "Assuming the builder role to get credentials for building KPL"
      - BUILDER_ROLE=$(aws sts assume-role --role-arn arn:aws:iam::056543101242:role/KPLCodeBuildAdminRole --role-session-name kpl-build-session)
      - export BUILDER_ROLE
      - export AWS_ACCESS_KEY_ID=$(echo "${BUILDER_ROLE}" | jq -r '.Credentials.AccessKeyId')
      - export AWS_SECRET_ACCESS_KEY=$(echo "${BUILDER_ROLE}" | jq -r '.Credentials.SecretAccessKey')
      - export AWS_SESSION_TOKEN=$(echo "${BUILDER_ROLE}" | jq -r '.Credentials.SessionToken')
      - echo "Pulled the credentials for KPL builders"
      - echo "################################################################################"
      - echo "SUCCESS Installed Dependencies for Linux/x86_64"
      - echo "################################################################################"
  build:
    commands:
      - echo "################################################################################"
      - echo "Starting build phase for Linux/x86_64"
      - echo "################################################################################"
      - echo "Getting Docker image for AL2012 build of KPL..."
      - docker pull public.ecr.aws/amazonlinux/amazonlinux:1
      - ls
      - df -h
      - echo "Building KPL in current directory in the Container..."
      - docker run --rm -m 15g --privileged -v $(pwd):/kpl public.ecr.aws/amazonlinux/amazonlinux:1 /bin/bash -c "export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID && export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY && yum install -y -q sudo wget cmake3 gcc72 gcc72-c++ make file tar gzip which perl git libuuid libuuid-devel zlib zlib-devel zlib-static perl-CPAN diffutils coreutils && echo | sudo cpan -i -T IPC::Cmd && wget -O /etc/yum.repos.d/corretto.repo https://yum.corretto.aws/corretto.repo && yum install -y -q java-1.8.0-amazon-corretto-devel && mkdir -p /usr/local/maven && wget https://archive.apache.org/dist/maven/maven-3/3.8.7/binaries/apache-maven-3.8.7-bin.tar.gz && tar xvf apache-maven-3.8.7-bin.tar.gz -C /usr/local/maven --strip-components=1 && ln -s /usr/local/maven/bin/mvn /usr/bin/mvn && cd /kpl && ./bootstrap.sh"
      - cd java/amazon-kinesis-producer/src/main/resources/amazon-kinesis-producer-native-binaries/$CODEBUILD_OS_NAME-`uname -m`
      - ls
      - sudo zip kinesis-producer.zip kinesis_producer
      - echo "Uploading build artifacts for KPL built on Linux x86_64..."
      - aws s3 cp kinesis-producer.zip s3://kpl-build-kinesis-internal/$KPL_VERSION-$HASH/$CODEBUILD_OS_NAME-`uname -m`/kinesis-producer.zip
      - echo "################################################################################"
      - echo "SUCCESS Build phase for Linux/x86_64, complete. Check for any errors reported"
      - echo "################################################################################"